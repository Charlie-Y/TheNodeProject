// Generated by CoffeeScript 1.7.1

/* 

=== NexusTHREE

In control of most of the drawing things that are in the
 */

(function() {
  ENGINE.NexusNodeModel = (function() {
    function NexusNodeModel() {}

    return NexusNodeModel;

  })();

  ENGINE.HelperSprite = (function() {
    function HelperSprite() {}

    HelperSprite.makeTextSprite = function(message, parameters) {
      var backgroundColor, borderColor, borderThickness, canvas, context, fontface, fontsize, metrics, sprite, spriteMaterial, textWidth, texture;
      if (parameters === undefined) {
        parameters = {};
      }
      fontface = (parameters.hasOwnProperty("fontface") ? parameters["fontface"] : "Arial");
      fontsize = (parameters.hasOwnProperty("fontsize") ? parameters["fontsize"] : 62);
      borderThickness = (parameters.hasOwnProperty("borderThickness") ? parameters["borderThickness"] : 4);
      borderColor = (parameters.hasOwnProperty("borderColor") ? parameters["borderColor"] : {
        r: 0,
        g: 0,
        b: 0,
        a: 1.0
      });
      backgroundColor = (parameters.hasOwnProperty("backgroundColor") ? parameters["backgroundColor"] : {
        r: 255,
        g: 255,
        b: 255,
        a: 1.0
      });
      canvas = document.createElement("canvas");
      context = canvas.getContext("2d");
      context.font = "Bold " + fontsize + "px " + fontface;
      metrics = context.measureText(message);
      textWidth = metrics.width;
      context.fillStyle = "rgba(" + backgroundColor.r + "," + backgroundColor.g + "," + backgroundColor.b + "," + backgroundColor.a + ")";
      context.strokeStyle = "rgba(" + borderColor.r + "," + borderColor.g + "," + borderColor.b + "," + borderColor.a + ")";
      context.lineWidth = borderThickness;
      ENGINE.HelperSprite.roundRect(context, borderThickness / 2, borderThickness / 2, textWidth + borderThickness, fontsize * 1.4 + borderThickness, 40);
      context.fillStyle = "rgba(0, 0, 0, 1.0)";
      context.fillText(message, borderThickness, fontsize + borderThickness);
      texture = new THREE.Texture(canvas);
      texture.needsUpdate = true;
      spriteMaterial = new THREE.SpriteMaterial({
        map: texture,
        useScreenCoordinates: false
      });
      sprite = new THREE.Sprite(spriteMaterial);
      sprite.scale.set(50, 25, 1);
      return sprite;
    };

    HelperSprite.roundRect = function(ctx, x, y, w, h, r) {
      ctx.beginPath();
      ctx.moveTo(x + r, y);
      ctx.lineTo(x + w - r, y);
      ctx.quadraticCurveTo(x + w, y, x + w, y + r);
      ctx.lineTo(x + w, y + h - r);
      ctx.quadraticCurveTo(x + w, y + h, x + w - r, y + h);
      ctx.lineTo(x + r, y + h);
      ctx.quadraticCurveTo(x, y + h, x, y + h - r);
      ctx.lineTo(x, y + r);
      ctx.quadraticCurveTo(x, y, x + r, y);
      ctx.closePath();
      return ctx.fill();
    };

    return HelperSprite;

  })();

}).call(this);
